// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$kc-denger: (
  50:#ffd4db,
  100:#ffa1b0,
  200:#ff6e85,
  300:#ff3b5a,
  400:#ff0830,
  500:#d40022,
  600:#a1001a,
  700:#6e0012,
  800:#3b0009,
  900:#080001,
  A100: #ff8a80,
  A200: #ff5252,
  A400: #ff1744,
  A700: #d50000,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: rgba(black, 0.87),
    A200: white,
    A400: white,
    A700: white,
  )
);
$kc-primary: (
  50:#f6f8fb,
  100:#d0daee,
  200:#abbde0,
  300:#86a0d2,
  400:#6183c4,
  500:#4167b1,
  600:#34528b,
  700:#263c66,
  800:#182641,
  900:#0a101c,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  )
);
$kc-success: (
  50:#f5fcf7,
  100:#ccf2d8,
  200:#a3e8b9,
  300:#7ade9a,
  400:#51d47b,
  500:#30c25f,
  600:#26994b,
  700:#1c7037,
  800:#124723,
  900:#081e0f,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  )
);
$ci-console-primary: mat.define-palette($kc-primary);
$ci-console-accent: mat.define-palette($kc-success);

// The warn palette is optional (defaults to red).
$ci-console-warn: mat.define-palette($kc-denger);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$ci-console-theme: mat.define-light-theme(
  (
    color: (
      primary: $ci-console-primary,
      accent: $ci-console-accent,
      warn: $ci-console-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($ci-console-theme);

/* You can add global styles to this file, and also import other style files */
@tailwind base;
@tailwind components;
@tailwind utilities;
@font-face {
  font-family: Popins;
  src: url(./assets/fonts/Poppins-Regular.ttf);
}
@font-face {
  font-family: Manrope;
  src: url(./assets/fonts/Manrope-Regular.ttf);
}
html,
body {
  margin: 0;
  font-family: Manrope, sans-serif;
  height: 100%;
  @apply font-regular bg-light text-dark text-paragraph tracking-wide;
}
* {
  font-family: Manrope, sans-serif;
  @apply font-regular text-dark text-paragraph tracking-wide;
}
.ace_error{
  cursor: pointer;
  // margin-top: 25px;
}

/*
*snack bar start
*/
.sb-success {
  @apply bg-success-100 shadow-md shadow-danger-200 rounded-md w-[592px] max-h-[206px] h-[76px] md:w-[800px] lg:w-[1216px];
  transition: 0.3s all cubic-bezier(0.39, 0.575, 0.565, 1);
  position: relative;
}

.sb-warn {
  @apply bg-warn-50 shadow-md shadow-warn-100 rounded-md w-[592px] max-h-[206px] h-[76px] md:w-[800px] lg:w-[1216px];
  transition: 0.3s all cubic-bezier(0.39, 0.575, 0.565, 1);
  position: relative;
}
.sb-notification {
  @apply bg-info-50 shadow-md shadow-info-100 rounded-md w-[592px] max-h-[206px] h-[76px] md:w-[800px] lg:w-[1216px];
  transition: 0.3s all cubic-bezier(0.39, 0.575, 0.565, 1);
  position: relative;
}
.sb-error {
  @apply bg-danger-50 shadow-md shadow-danger-100 rounded-md w-[592px] max-h-[206px] h-[76px] md:w-[800px] lg:w-[1216px];
  transition: 0.3s all cubic-bezier(0.39, 0.575, 0.565, 1);
  position: relative;
}
/*
*snack bar end
*/

/*
*Buttons start
*/
.kc-button-primary {
  @apply bg-primary hover:bg-primary-1000 py-4 px-6 text-white text-button rounded-md gap-[8px] focus:bg-primary-1000;
  &:disabled{
    @apply bg-primary-300 text-dark-500;
  }
}
.kc-button-primary-light {
  @apply bg-primary-500 hover:bg-primary-600 py-4 px-6 text-white text-button rounded-md gap-[8px] focus:bg-primary-700;
  &:disabled{
    @apply bg-primary-300 text-dark-500;
  }
}
.kc-button-primary-outline {
  @apply border-primary hover:border-primary-1000 hover:text-primary-1000 border-1.5 py-4 px-6 text-primary text-button rounded-md gap-[8px];
  &:disabled{
    @apply border-primary-300 text-primary-300;
  }
}
.kc-button-primary-sm {
  @apply bg-primary hover:bg-primary-1000 focus:bg-primary-1000 py-2 px-3 text-white text-button-sm rounded-md gap-[8px];
  &:disabled{
    @apply bg-primary-300 text-dark-500;
  }
}
.kc-button-primary-sm-outline {
  @apply border-primary hover:border-primary-1000 hover:text-primary-1000 border-1.5 py-2 px-3 text-primary text-button-sm rounded-md gap-[8px];
  &:disabled{
    @apply border-primary-300 text-primary-300;
  }
}
/**/

.kc-button-success-light {
  @apply bg-success-300 hover:bg-success-400 py-4 px-6 text-dark text-button rounded-md gap-[8px] focus:bg-success-400;
  &:disabled{
    @apply bg-primary-300 text-dark-500;
  }
}
.kc-button-danger {
  @apply bg-danger hover:bg-danger-700 border-1.5 py-4 px-6 text-white text-button-sm rounded-md gap-[8px];
  &:disabled{
    @apply border-primary-300 text-primary-300;
  }
}

.kc-button-danger-sm-outline {
  @apply border-danger hover:border-danger-700 hover:text-danger-1000 border-1.5 py-2 px-3 text-danger text-button rounded-md gap-[8px];
  &:disabled{
    @apply  border-primary-300 text-dark-500;
  }
}

.kc-button-danger-light {
  @apply bg-danger-300 hover:bg-danger-400 py-4 px-6 text-dark text-button rounded-md gap-[8px] focus:bg-danger-400;
  &:disabled{
    @apply bg-primary-300 text-dark-500;
  }
}
.kc-button-transparent {
  @apply  py-4 px-6 text-white text-button rounded-md gap-[8px];
  &:disabled{
    @apply text-dark-500;
  }
}
.kc-button-transparent-sm {
  @apply  py-2 px-3 text-white text-button rounded-md gap-[8px] flex justify-center items-center;
  &:disabled{
    @apply text-dark-500;
  }
}
/*
*Buttons end
*/
.kc-card {
  @apply bg-light-500 border-1.5 border-kc-bdr-card rounded-md;
}
.kc-form-field {
  @apply w-full;
}

.kc-progress-bar {
  .mat-progress-bar-fill::after {
    @apply bg-primary;
  }
}

.kc-progress-bar {
  .mat-progress-bar-buffer {
    @apply bg-white;
  }
}

.kc-progress-bar {
  .mat-progress-bar {
    @apply rounded;
  }
}
.kc-dialog {
  .mat-dialog-container {
    @apply bg-light-500 max-w-5xl;
  }
}
.custom-modalbox > mat-dialog-container {
  background-color: transparent !important;
  padding: 0px !important;
}

.ace_scroller{
  div {
    color: white !important;
  }
}
.ace_gutter{
  div {
    color: white !important;
  }
}
.mat-dialog-container{
  padding: 0px !important;
  @apply bg-light-700;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  -webkit-text-fill-color: #24252C;
  -webkit-box-shadow: none !important;
  transition: background-color 5000s ease-in-out 0s;
}
::-webkit-scrollbar {
  width: 8px;
  height: 8px;

  &:hover {
    width: 10px;
    height: 10px;
  }
}

/* Track */
::-webkit-scrollbar-track {
  @apply bg-light;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: #939393;
  border-radius: 30px;

  &:hover {
    background: #555;
    width: 10px;
    height: 10px;
  }
}

@import "~ngx-toastr/toastr";
